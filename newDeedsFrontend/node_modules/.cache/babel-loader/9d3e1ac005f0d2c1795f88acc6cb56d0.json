{"ast":null,"code":"const BaseFilter = require('./base-filter');\n\nconst getBlocksForRange = require('./getBlocksForRange');\n\nconst {\n  incrementHexInt\n} = require('./hexUtils');\n\nclass TxFilter extends BaseFilter {\n  constructor(_ref) {\n    let {\n      provider\n    } = _ref;\n    super();\n    this.type = 'tx';\n    this.provider = provider;\n  }\n\n  async update(_ref2) {\n    let {\n      oldBlock\n    } = _ref2;\n    const toBlock = oldBlock;\n    const fromBlock = incrementHexInt(oldBlock);\n    const blocks = await getBlocksForRange({\n      provider: this.provider,\n      fromBlock,\n      toBlock\n    });\n    const blockTxHashes = [];\n\n    for (const block of blocks) {\n      blockTxHashes.push(...block.transactions);\n    } // add to results\n\n\n    this.addResults(blockTxHashes);\n  }\n\n}\n\nmodule.exports = TxFilter;","map":null,"metadata":{},"sourceType":"script"}